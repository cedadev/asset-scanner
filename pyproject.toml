[tool.poetry]
name = "stac-generator"
version = "2.0.0"
description = "Framework providing a plugin architecture for metadata extraction and the generation of STACs."
authors = ["Rhys Evans <rhys.r.evans@stfc.ac.uk>"]
license = "BSD - See stac_generator/LICENSE file for details"
readme = "README.md"
homepage = "https://github.com/cedadev/stac-generator"
keywords = ['stac', 'metadata', 'plugin', 'framework']

packages = [
    { include = "stac_generator"},
]

[tool.poetry.scripts]
stac_generator = 'stac_generator.scripts.stac_generator:main'

[tool.poetry.dependencies]
python = "^3.10"
aiohttp = "3.9.2"
alabaster = "0.7.12"
anytree = "2.8.0"
async-timeout = "4.0.3"
babel = "2.9.1"
boto3 = "1.18.44"
botocore = "1.21.44"
cachetools = "4.2.4"
certifi = "2023.7.22"
cf-xarray = "0.8.4"
chardet = "4.0.0"
click = "8.1.3"
docutils = "0.16"
elasticsearch = "7.13.1"
fsspec = "2024.3.1"
gcsfs = "2024.3.1"
idna = "2.10"
imagesize = "1.2.0"
jinja2 = "3.1.3"
jmespath = "0.10.0"
multidict = "5.1.0"
packaging = "21.3"
pika = "1.2.0"
pydantic = "2.1.1"
pygments = "2.15.0"
pyparsing = "2.4.7"
python-dateutil = "2.8.2"
python-magic = "0.4.25"
pytz = "2021.1"
pyyaml = "6.0.1"
requests = "2.31.0"
s3transfer = "0.5.0"
siphon = "0.9"
six = "1.16.0"
snowballstemmer = "2.1.0"
tqdm = "4.62.3"
typing-extensions = "4.7.1"
urllib3 = "1.26.18"
xarray = "2023.9.0"
yarl = "1.8.2"
httpx = "^0.27.0"
httpx-auth = "^0.22.0"
extraction-methods = {git = "https://github.com/cedadev/extraction-methods.git"}

[tool.poetry.extras]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
    "elasticsearch",
    "sphinxcontrib-programoutput",
]
elasticsearch = ["elasticsearch"]
intake-esm = ["intake-esm"]
rabbitmq = ["pika"]
thredds = ["siphon"]

[tool.poetry.group.test.dependencies]
pytest = "^8.0.1"

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']

[tool.isort]
profile = "black"

[tool.mypy]
strict = false
ignore_missing_imports = true
packages = "stac_generator"

[tool.poetry.plugins."stac_generator.inputs"]
file_system = "stac_generator.plugins.inputs.file_system:FileSystemInput"
object_store = "stac_generator.plugins.inputs.object_store:ObjectStoreInput"
intake_esm = "stac_generator.plugins.inputs.intake_esm:IntakeESMInput"
rabbitmq = "stac_generator.plugins.inputs.rabbit_mq:RabbitMQInput"
thredds = "stac_generator.plugins.inputs.thredds:ThreddsInput"
text_file = "stac_generator.plugins.inputs.text_file:TextFileInput"
solr = "stac_generator.plugins.inputs.solr:SolrInput"
elasticsearch = "stac_generator.plugins.inputs.elasticsearch:ElasticsearchInput"

[tool.poetry.plugins."stac_generator.outputs"]
standard_out = "stac_generator.plugins.outputs.standard_out:StandardOutOutput"
standard_out_bulk = "stac_generator.plugins.bulk_outputs.standard_out:StandardOutBulkOutput"
elasticsearch = "stac_generator.plugins.outputs.elasticsearch:ElasticsearchOutput"
elasticsearch_bulk = "stac_generator.plugins.bulk_outputs.elasticsearch:ElasticsearchBulkOutput"
stacapi = "stac_generator.plugins.outputs.stacapi_backend:StacApiOutputBackend"
text_file = "stac_generator.plugins.outputs.text_file:TextFileOutput"
json_file = "stac_generator.plugins.outputs.json_file:JsonFileOutput"
rabbitmq = "stac_generator.plugins.outputs.rabbit_mq:RabbitMQOutput"
rabbitmq_bulk = "stac_generator.plugins.bulk_outputs.rabbit_mq:RabbitMQBulkOutput"
intake_esm = "stac_generator.plugins.outputs.intake_esm:IntakeESMOutput"
stac_fastapi = "stac_generator.plugins.outputs.stac_fastapi:STACFastAPIOutput"

[tool.poetry.plugins."stac_generator.mappings"]
ceda = "stac_generator.plugins.mappings.ceda:CEDAMapping"
stac = "stac_generator.plugins.mappings.stac:STACMapping"
jinja = "stac_generator.plugins.mappings.jinja2:Jinja2Mapping"

[tool.poetry.plugins."stac_generator.generators"]
asset = "stac_generator.plugins.generators.asset:AssetGenerator"
item = "stac_generator.plugins.generators.item:ItemGenerator"
collection = "stac_generator.plugins.generators.collection:CollectionGenerator"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
